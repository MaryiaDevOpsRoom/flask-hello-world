pipeline {
    agent any
    
    stages {
        stage('Retrieve Commit Hash') {
            steps {
                checkout scm
                script {
                    build_tag = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
                }
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: '62676b3b-a8d2-4c6e-9362-4d02cc1ba917', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        sh """
                            docker build -t quay.io/maryia-brauer/flask-hello-world:${build_tag} -f Dockerfile .
                            docker login -u $DOCKER_USER -p $DOCKER_PASS quay.io
                            docker push quay.io/maryia-brauer/flask-hello-world:${build_tag}
                        """
                    }
                }
            }
        }
        
        stage('Update Kubernetes Manifest') {
            steps {
                script {
                    def gitRepo = 'https://github.com/MaryiaDevOpsRoom/argocd.git'
                    withCredentials([gitUsernamePassword(credentialsId: '39e76333-a95d-47ff-9ebd-a92317c75af8', gitToolName: 'git-tool')]) {
                    sh """
                        git clone $gitRepo gitrepo1
                        cd gitrepo1
                        sed -i "s#image: quay.*#image: quay.io/maryia-brauer/flask-hello-world:${build_tag}#g" flask-hello-world.yaml
                        git config user.name maryia-brauer
                        git config user.email maryia.brauer@va.lv
                        git add .
                        git commit -m "Upgraded flask-hello-world.yaml thru Jenkins"
                        git push -u ${gitCredentials} main
                    """ 
                }
            }
        }
    }
    
    post {
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
